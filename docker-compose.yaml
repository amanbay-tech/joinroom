services:
  frontend:
    container_name: joinroom-frontend
    image: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    restart: always
    depends_on:
      - backend
    networks:
      - joinroom_network

  backend:
    container_name: joinroom-backend
    image: backend
    build:
      context: ./backend
      dockerfile: DockerFile
    ports:
      - 4000:4000
    networks:
      - joinroom_network
    depends_on:
      - db

  clientbot:
    container_name: joinroom-clientbot
    image: clientbot
    build:
      context: ./clientbot
      dockerfile: DockerFile
    networks:
      - joinroom_network
    depends_on:
      - backend

  expertbot:
    container_name: joinroom-expertbot
    image: expertbot
    build:
      context: ./expertbot
      dockerfile: DockerFile
    networks:
      - joinroom_network
    depends_on:
      - backend

  db:
    container_name: joinroom-postgres
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: db_user
      POSTGRES_PASSWORD: 12112AWKRRSE
      POSTGRES_DB: db_postgres
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - joinroom_network

volumes:
  postgres_data:

networks:
  joinroom_network:
    driver: bridge
