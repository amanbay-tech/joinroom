datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

enum Status {
  PENDING
  ALLOWED
  REJECTED
}

model User {
  id    Int    @id @default(autoincrement())
  userId Int @unique
  username String
  email String?
  phone String?
  name  String?
  course Course[]
  myCourse MyCourse[]
  lastLogin DateTime?
  deletedAt  DateTime?
  isActive Boolean @default(true)
  updatedAt  DateTime   @updatedAt
  createdAt  DateTime   @default(now())
  @@index([userId])
}


model Course{
  id   Int    @id @default(autoincrement()) 
  user User @relation(fields: [ownerId], references: [id])
  ownerId Int      
  name String
  description String
  image String?
  lesson Lesson[]
  myCourse MyCourse[]
  isActive   Boolean  @default(true)
  updatedAt  DateTime   @updatedAt
  createdAt  DateTime   @default(now())
}


model Lesson{
  id   Int    @id @default(autoincrement()) 
  course Course @relation(fields: [courseId], references: [id])
  courseId Int  
  orderNumber Int 
  name String
  description String 
  url String
  image String?
  updatedAt  DateTime   @updatedAt
  createdAt  DateTime   @default(now())
}


model MyCourse {
  id             Int      @id @default(autoincrement())
  course         Course   @relation(fields: [courseId], references: [id])
  courseId       Int
  user           User     @relation(fields: [userId], references: [id])
  userId         Int
  isActive       Boolean  @default(true)
  status         Status   @default(PENDING)
  courseOwnerId  Int
  updatedAt  DateTime   @updatedAt
  createdAt  DateTime   @default(now())
}



